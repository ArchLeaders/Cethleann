<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cethleann</name>
    </assembly>
    <members>
        <member name="T:Cethleann.Audio.ISoundResourceSection">
            <summary>
                Section helper
            </summary>
        </member>
        <member name="P:Cethleann.Audio.ISoundResourceSection.Base">
            <summary>
                Underlying entry
            </summary>
        </member>
        <member name="T:Cethleann.Audio.SoundResource">
            <summary>
                Implements KTSR
            </summary>
        </member>
        <member name="M:Cethleann.Audio.SoundResource.#ctor(System.IO.Stream)">
            <summary>
                Initialize a KTSR from a Stream
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:Cethleann.Audio.SoundResource.#ctor(System.Span{System.Byte})">
            <summary>
                Initialize a KTSR from a Span buffer
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="P:Cethleann.Audio.SoundResource.Header">
            <summary>
                KTSR Header
            </summary>
        </member>
        <member name="P:Cethleann.Audio.SoundResource.Entries">
            <summary>
                Sound resources found in the KTSR container.
            </summary>
        </member>
        <member name="T:Cethleann.Audio.SoundResourceSample">
            <summary>
                KTSS/KOVS Container found in KTSS containers
            </summary>
        </member>
        <member name="M:Cethleann.Audio.SoundResourceSample.#ctor(System.Span{System.Byte})">
            <summary>
                Initialize from a blob
            </summary>
            <param name="blob"></param>
        </member>
        <member name="P:Cethleann.Audio.SoundResourceSample.Header">
            <summary>
                KTSS/KOVS container header
            </summary>
        </member>
        <member name="P:Cethleann.Audio.SoundResourceSample.Data">
            <summary>
                KTSS/KOVS Sound blob
            </summary>
        </member>
        <member name="P:Cethleann.Audio.SoundResourceSample.Base">
            <inheritdoc />
        </member>
        <member name="T:Cethleann.Audio.SoundSource">
            <summary>
                KTSS Sound Sample, or KOVS Encrypted Sound Sample
            </summary>
        </member>
        <member name="M:Cethleann.Audio.SoundSource.#ctor(System.Span{System.Byte})">
            <summary>
                Initialize from a buffer.
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="P:Cethleann.Audio.SoundSource.Header">
            <summary>
                KTSS
            </summary>
        </member>
        <member name="P:Cethleann.Audio.SoundSource.CodecHeader">
            <summary>
                KTSS Codec Header
            </summary>
        </member>
        <member name="P:Cethleann.Audio.SoundSource.ChannelFamily">
            <summary>
                Channel info
            </summary>
        </member>
        <member name="P:Cethleann.Audio.SoundSource.Packets">
            <summary>
                Codec packets
            </summary>
        </member>
        <member name="P:Cethleann.Audio.SoundSource.FullBuffer">
            <summary>
                Full sound buffer
            </summary>
        </member>
        <member name="T:Cethleann.Audio.SoundUnknown">
            <summary>
                Unknown Blob shim
            </summary>
        </member>
        <member name="M:Cethleann.Audio.SoundUnknown.#ctor(System.Span{System.Byte})">
            <summary>
                Initialize with a blob
            </summary>
            <param name="blob"></param>
        </member>
        <member name="P:Cethleann.Audio.SoundUnknown.Data">
            <summary>
                Data blob
            </summary>
        </member>
        <member name="P:Cethleann.Audio.SoundUnknown.Base">
            <inheritdoc />
        </member>
        <member name="T:Cethleann.Bundle">
            <summary>
                Koei Engine Bundle, apparently because DataTable is too boring.
            </summary>
        </member>
        <member name="M:Cethleann.Bundle.#ctor">
            <summary>
                Initialize with no data
            </summary>
        </member>
        <member name="M:Cethleann.Bundle.#ctor(System.Span{System.Byte})">
            <summary>
                Split file into individual chunks
            </summary>
            <param name="data"></param>
            <exception cref="T:System.IO.InvalidDataException"></exception>
        </member>
        <member name="P:Cethleann.Bundle.Entries">
            <summary>
                lsof data blobs
            </summary>
        </member>
        <member name="M:Cethleann.Bundle.Write">
            <summary>
                Writes bundle data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cethleann.Bundle.Validate(System.Span{System.Byte})">
            <summary>
                Checks if the stream makes sense to be a bundle
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:Cethleann.DataTables.DataTable">
            <summary>
                Main blob bundle of the game.
                Can contain many things, from structures to art assets.
            </summary>
        </member>
        <member name="M:Cethleann.DataTables.DataTable.#ctor">
            <summary>
                Initialize with no data.
            </summary>
        </member>
        <member name="M:Cethleann.DataTables.DataTable.#ctor(System.Span{System.Byte})">
            <summary>
                Initialize with a span.
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="P:Cethleann.DataTables.DataTable.Entries">
            <summary>
                Lsof Entries found in the table
            </summary>
        </member>
        <member name="M:Cethleann.DataTables.DataTable.Write">
            <summary>
                Writes a data buffer for this structure.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cethleann.DataTables.StringTable">
            <summary>
                Main string bundle of the game.
            </summary>
        </member>
        <member name="M:Cethleann.DataTables.StringTable.#ctor(System.Span{System.Byte})">
            <summary>
                Initialize with a span.
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="P:Cethleann.DataTables.StringTable.Entries">
            <summary>
                Lsof Entries found in the table
            </summary>
        </member>
        <member name="T:Cethleann.DataTables.StructTable">
            <summary>
                Parses a memory buffer by assuming it consists of fixed width structs.
            </summary>
        </member>
        <member name="M:Cethleann.DataTables.StructTable.#ctor(System.Span{System.Byte})">
            <summary>
                Initialize with given buffer
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="P:Cethleann.DataTables.StructTable.Entries">
            <summary>
                Lsof Entries found in the struct table
            </summary>
        </member>
        <member name="M:Cethleann.DataTables.StructTable.Cast``1">
            <summary>
                Cast all entries to the specified struct type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cethleann.DataType">
            <summary>
                Magic Values for most files
            </summary>
        </member>
        <member name="F:Cethleann.DataType.None">
            <summary>
                Used as a dummy
            </summary>
        </member>
        <member name="F:Cethleann.DataType.StructTable">
            <summary>
                <seealso cref="F:Cethleann.DataType.StructTable" />
            </summary>
        </member>
        <member name="F:Cethleann.DataType.SARC">
            <summary>
                S-Archive?
            </summary>
        </member>
        <member name="F:Cethleann.DataType.ElixirArchive">
            <summary>
                Elixir Archive
            </summary>
        </member>
        <member name="F:Cethleann.DataType.SPKG">
            <summary>
                S-Package?
            </summary>
        </member>
        <member name="F:Cethleann.DataType.KTSR">
            <summary>
                KTGL Sound Resource
            </summary>
        </member>
        <member name="F:Cethleann.DataType.KTSC">
            <summary>
                KTGL Sound Container
            </summary>
        </member>
        <member name="F:Cethleann.DataType.KTSS">
            <summary>
                KTGL Sound Sample
            </summary>
        </member>
        <member name="F:Cethleann.DataType.KOVS">
            <summary>
                KTGL Sound Sample
            </summary>
        </member>
        <member name="F:Cethleann.DataType.SCEN">
            <summary>
                Scene
            </summary>
        </member>
        <member name="F:Cethleann.DataType.SPK3">
            <summary>
                Shader Pack?
            </summary>
        </member>
        <member name="F:Cethleann.DataType.SWGQ">
            <summary>
                Shader Pack?
            </summary>
        </member>
        <member name="F:Cethleann.DataType.River">
            <summary>
                River?
            </summary>
        </member>
        <member name="F:Cethleann.DataType.RIGB">
            <summary>
                Rig B?
            </summary>
        </member>
        <member name="F:Cethleann.DataType.DATD">
            <summary>
                DATD
            </summary>
        </member>
        <member name="F:Cethleann.DataType.LCD0">
            <summary>
                LCD 0
            </summary>
        </member>
        <member name="F:Cethleann.DataType.WEBM">
            <summary>
                WebM Video Container
            </summary>
        </member>
        <member name="F:Cethleann.DataType.KLDM">
            <summary>
                KTGL Model Container
            </summary>
        </member>
        <member name="F:Cethleann.DataType.ScreenLayout">
            <summary>
                KTGL Screen Layout Texture
            </summary>
        </member>
        <member name="F:Cethleann.DataType.ScreenLayoutTexture">
            <summary>
                KTGL Screen Layout
            </summary>
        </member>
        <member name="F:Cethleann.DataType.VideoSource">
            <summary>
                KTGL Video Source (usually encrypted)
            </summary>
        </member>
        <member name="F:Cethleann.DataType.Font">
            <summary>
                KTGL Font
            </summary>
        </member>
        <member name="F:Cethleann.DataType.TextLocalization19">
            <summary>
                teXt Localization, version 19
            </summary>
        </member>
        <member name="F:Cethleann.DataType.TextureGroup">
            <summary>
                KTGL Texture Group
            </summary>
        </member>
        <member name="F:Cethleann.DataType.Model">
            <summary>
                KTGL Model Base
            </summary>
        </member>
        <member name="F:Cethleann.DataType.AnimationV2">
            <summary>
                KTGL Animation
            </summary>
        </member>
        <member name="F:Cethleann.DataType.Animation">
            <summary>
                KTGL Animation
            </summary>
        </member>
        <member name="F:Cethleann.DataType.ModelGroup">
            <summary>
                KTGL Model Group
            </summary>
        </member>
        <member name="F:Cethleann.DataType.EffectManager">
            <summary>
                KTGL Effect Manager
            </summary>
        </member>
        <member name="F:Cethleann.DataType.Effect">
            <summary>
                KTGL Effect
            </summary>
        </member>
        <member name="F:Cethleann.DataType.SEBin">
            <summary>
                Sound E Bin
            </summary>
        </member>
        <member name="F:Cethleann.DataType.PostFX">
            <summary>
                KTGL PostFX Shader Bundle
            </summary>
        </member>
        <member name="F:Cethleann.DataType.ModelSkeleton">
            <summary>
                KTGL Model Skeleton
            </summary>
        </member>
        <member name="F:Cethleann.DataType.ModelFormat">
            <summary>
                KTGL Model Format
            </summary>
        </member>
        <member name="F:Cethleann.DataType.ModelGeometry">
            <summary>
                KTGL Model Geometry
            </summary>
        </member>
        <member name="F:Cethleann.DataType.ModelMatrix">
            <summary>
                KTGL Model Matrices
            </summary>
        </member>
        <member name="F:Cethleann.DataType.ModelExtra">
            <summary>
                KTGL Model ExtraData.
            </summary>
        </member>
        <member name="F:Cethleann.DataType.ModelCollision">
            <summary>
                KTGL Collision Model.
            </summary>
        </member>
        <member name="F:Cethleann.DataType.ModelClothDriver">
            <summary>
                KTGL Cloth Driver
            </summary>
        </member>
        <member name="F:Cethleann.DataType.ModelCloth">
            <summary>
                KTGL Cloth
            </summary>
        </member>
        <member name="F:Cethleann.DataType.ModelClothSurface">
            <summary>
                KTGL Cloth
            </summary>
        </member>
        <member name="F:Cethleann.DataType.ModelSoftbody">
            <summary>
                KTGL Soft Body voxels
            </summary>
        </member>
        <member name="F:Cethleann.DataType.ModelHair">
            <summary>
                KTGL Hair voxels
            </summary>
        </member>
        <member name="F:Cethleann.DataType.GMPK">
            <summary>
                Model Pack
            </summary>
        </member>
        <member name="F:Cethleann.DataType.GAPK">
            <summary>
                Animation Pack
            </summary>
        </member>
        <member name="F:Cethleann.DataType.GEPK">
            <summary>
                Effect Pack
            </summary>
        </member>
        <member name="F:Cethleann.DataType.Compressed">
            <summary>
                DEFLATE Compressed File.
            </summary>
        </member>
        <member name="F:Cethleann.DataType.CompressedChonky">
            <summary>
                DEFLATE Compressed File.
            </summary>
        </member>
        <member name="T:Cethleann.Extensions">
            <summary>
                Series of helper for FETH.
            </summary>
        </member>
        <member name="M:Cethleann.Extensions.ToFourCC(System.Int32,System.Boolean)">
            <summary>
                Converts an integer to a FourCC
            </summary>
            <param name="value"></param>
            <param name="onlyAlphaNum"></param>
            <returns></returns>
        </member>
        <member name="M:Cethleann.Extensions.ToFourCC(Cethleann.DataType,System.Boolean)">
            <summary>
                Converts a DataType to a FourCC
            </summary>
            <param name="value"></param>
            <param name="onlyAlphaNum"></param>
            <returns></returns>
        </member>
        <member name="M:Cethleann.Extensions.ToVersion(System.Int32)">
            <summary>
                Converts a version tag to a number.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cethleann.Extensions.ToVersionA(System.Int32)">
            <summary>
                Converts a version tag to a number.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cethleann.Extensions.GetExtension(Cethleann.DataType)">
            <summary>
                Returns determined string extension for this magic.
            </summary>
            <param name="magic"></param>
            <returns></returns>
        </member>
        <member name="M:Cethleann.Extensions.IsKnown(Cethleann.DataType)">
            <summary>
                True if the magic values are known
            </summary>
            <param name="magic"></param>
            <returns></returns>
        </member>
        <member name="M:Cethleann.Extensions.IsKnown(System.Span{System.Byte})">
            <summary>
                True if the magic values are known
            </summary>
            <param name="span"></param>
            <returns></returns>
        </member>
        <member name="M:Cethleann.Extensions.Matches(System.Span{System.Byte},Cethleann.DataType)">
            <summary>
                True if the magic value matches the first 4 bytes of the span.
            </summary>
            <param name="span"></param>
            <param name="magic"></param>
            <returns></returns>
        </member>
        <member name="M:Cethleann.Extensions.Matches(Cethleann.DataType,System.Span{System.Byte})">
            <summary>
                True if the magic value matches the first 4 bytes of the span.
            </summary>
            <param name="magic"></param>
            <param name="span"></param>
            <returns></returns>
        </member>
        <member name="M:Cethleann.Extensions.GetDataType(System.Span{System.Byte})">
            <summary>
                Gets <seealso cref="T:Cethleann.DataType" /> from a Span.
            </summary>
            <param name="span"></param>
            <returns></returns>
        </member>
        <member name="M:Cethleann.Extensions.IsDataTable(System.Span{System.Byte})">
            <summary>
                Guesses if the stream is a DataTable
            </summary>
            H:\Datamining\FireEmblemTH\Cethleann\DragonLib\DataTypeHelper.cs
            <param name="buffer">data to test</param>
            <returns>true if the header is predictable</returns>
        </member>
        <member name="M:Cethleann.Extensions.IsBundle(System.Span{System.Byte})">
            <summary>
                Guesses if the stream is a valid bundle.
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="T:Cethleann.G1.G1Model">
            <summary>
                G1Model is the main model format
            </summary>
        </member>
        <member name="M:Cethleann.G1.G1Model.#ctor">
            <summary>
                Initialize with no data.
            </summary>
        </member>
        <member name="M:Cethleann.G1.G1Model.#ctor(System.Span{System.Byte},System.Boolean,System.Boolean)">
            <summary>
                Parse G1M from the provided data buffer
            </summary>
            <param name="data"></param>
            <param name="ignoreVersion"></param>
            <param name="parse"></param>
        </member>
        <member name="P:Cethleann.G1.G1Model.SectionRoot">
            <summary>
                Raw data for each section
            </summary>
        </member>
        <member name="P:Cethleann.G1.G1Model.Sections">
            <summary>
                Sections found in this model.
                Look for <seealso cref="T:Cethleann.G1.G1ModelSection.G1MGeometry" /> for Geometry.
                Look for <seealso cref="T:Cethleann.G1.G1ModelSection.G1MSkeleton" /> for Skeleton.
            </summary>
        </member>
        <member name="P:Cethleann.G1.G1Model.SupportedVersion">
            <inheritdoc />
        </member>
        <member name="P:Cethleann.G1.G1Model.Section">
            <inheritdoc />
        </member>
        <member name="M:Cethleann.G1.G1Model.WriteFromRoot">
            <summary>
                Write to G1M span using just SectionsRoot
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cethleann.G1.G1Model.GetSection``1">
            <summary>
                Gets a specific section from the G1M model
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cethleann.G1.G1Model.GetSections``1">
            <summary>
                Gets a specific section from the G1M model
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cethleann.G1.G1Model.ExportMeshes(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
                Exports meshes to GLTF
            </summary>
            <param name="bufferPath"></param>
            <param name="bufferPathRoot"></param>
            <param name="lod"></param>
            <param name="group"></param>
            <param name="texBase"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="T:Cethleann.G1.G1ModelSection.G1Extra">
            <summary>
                Extra Section of G1M models
            </summary>
        </member>
        <member name="M:Cethleann.G1.G1ModelSection.G1Extra.#ctor(System.Span{System.Byte},System.Boolean,Cethleann.Structure.Resource.ResourceSectionHeader)">
            <summary>
                Extra data found in G1M models.
            </summary>
            <param name="data"></param>
            <param name="ignoreVersion"></param>
            <param name="sectionHeader"></param>
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1Extra.SupportedVersion">
            <inheritdoc />
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1Extra.Section">
            <inheritdoc />
        </member>
        <member name="T:Cethleann.G1.G1ModelSection.G1MFormat">
            <summary>
                F Section of G1M models
            </summary>
        </member>
        <member name="M:Cethleann.G1.G1ModelSection.G1MFormat.#ctor(System.Span{System.Byte},System.Boolean,Cethleann.Structure.Resource.ResourceSectionHeader)">
            <summary>
                Model format Data
                Pay Respects.
            </summary>
            <param name="data"></param>
            <param name="ignoreVersion"></param>
            <param name="sectionHeader"></param>
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MFormat.SupportedVersion">
            <inheritdoc />
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MFormat.Section">
            <inheritdoc />
        </member>
        <member name="T:Cethleann.G1.G1ModelSection.G1MGeometry">
            <summary>
                Geometry Section of G1M models
            </summary>
        </member>
        <member name="M:Cethleann.G1.G1ModelSection.G1MGeometry.#ctor(System.Span{System.Byte},System.Boolean,Cethleann.Structure.Resource.ResourceSectionHeader)">
            <summary>
                Model Geometry
            </summary>
            <param name="data"></param>
            <param name="ignoreVersion"></param>
            <param name="sectionHeader"></param>
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGeometry.Header">
            <summary>
                Header info (bounding box)
            </summary>
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGeometry.SubSections">
            <summary>
                List of geometry sections
            </summary>
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGeometry.SupportedVersion">
            <inheritdoc />
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGeometry.Section">
            <inheritdoc />
        </member>
        <member name="M:Cethleann.G1.G1ModelSection.G1MGeometry.GetSection``1">
            <summary>
                Gets a geometry component
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cethleann.G1.G1ModelSection.G1MGeometry.GetSections``1">
            <summary>
                Gets all geometry components matching
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cethleann.G1.G1ModelSection.G1MGSection.G1MGBone">
            <summary>
                Parses mesh bones
            </summary>
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGSection.G1MGBone.Bones">
            <summary>
                Bone map
            </summary>
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGSection.G1MGBone.Type">
            <inheritdoc />
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGSection.G1MGBone.Section">
            <inheritdoc />
        </member>
        <member name="T:Cethleann.G1.G1ModelSection.G1MGSection.G1MGIndexBuffer">
            <summary>
            </summary>
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGSection.G1MGIndexBuffer.Buffers">
            <summary>
                List of vertex buffer strides
            </summary>
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGSection.G1MGIndexBuffer.Type">
            <inheritdoc />
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGSection.G1MGIndexBuffer.Section">
            <inheritdoc />
        </member>
        <member name="T:Cethleann.G1.G1ModelSection.G1MGSection.G1MGMaterial">
            <summary>
                Parses material data
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGSection.G1MGMaterial.Materials">
            <summary>
                Material data found in this section
            </summary>
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGSection.G1MGMaterial.Section">
            <inheritdoc />
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGSection.G1MGMaterial.Type">
            <inheritdoc />
        </member>
        <member name="T:Cethleann.G1.G1ModelSection.G1MGSection.G1MGMesh">
            <summary>
                Parses submesh groups
            </summary>
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGSection.G1MGMesh.Meshes">
            <summary>
                List of meshes with the related data.
            </summary>
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGSection.G1MGMesh.Type">
            <inheritdoc />
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGSection.G1MGMesh.Section">
            <inheritdoc />
        </member>
        <member name="T:Cethleann.G1.G1ModelSection.G1MGSection.G1MGShaderParam">
            <summary>
                Parses shader variable data
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGSection.G1MGShaderParam.ParamGroups">
            <summary>
                Two dimensional list of param values.
                I think count usually matches the number of materials.
            </summary>
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGSection.G1MGShaderParam.Type">
            <inheritdoc />
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGSection.G1MGShaderParam.Section">
            <inheritdoc />
        </member>
        <member name="T:Cethleann.G1.G1ModelSection.G1MGSection.G1MGSocket">
            <summary>
                "Lattice" is an assumption.
                Just a list of float data, used for bones maybe?
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGSection.G1MGSocket.Sockets">
            <summary>
                Sockets
            </summary>
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGSection.G1MGSocket.Section">
            <inheritdoc />
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGSection.G1MGSocket.Type">
            <inheritdoc />
        </member>
        <member name="T:Cethleann.G1.G1ModelSection.G1MGSection.G1MGSubMesh">
            <summary>
                Parses submesh data
            </summary>
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGSection.G1MGSubMesh.SubMeshes">
            <summary>
                Assembles a series of faces into a polygon.
            </summary>
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGSection.G1MGSubMesh.Type">
            <inheritdoc />
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGSection.G1MGSubMesh.Section">
            <inheritdoc />
        </member>
        <member name="T:Cethleann.G1.G1ModelSection.G1MGSection.G1MGVertexAttribute">
            <summary>
                VertexBuffer Stride information
            </summary>
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGSection.G1MGVertexAttribute.Attributes">
            <summary>
                Describes vertex strides
            </summary>
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGSection.G1MGVertexAttribute.Type">
            <inheritdoc />
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGSection.G1MGVertexAttribute.Section">
            <inheritdoc />
        </member>
        <member name="T:Cethleann.G1.G1ModelSection.G1MGSection.G1MGVertexBuffer">
            <summary>
                Copies raw vertex buffers.
            </summary>
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGSection.G1MGVertexBuffer.Buffers">
            <summary>
                List of vertex buffer strides
            </summary>
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGSection.G1MGVertexBuffer.Type">
            <inheritdoc />
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGSection.G1MGVertexBuffer.Section">
            <inheritdoc />
        </member>
        <member name="T:Cethleann.G1.G1ModelSection.G1MGSection.IG1MGSection">
            <summary>
                Base Wrapper for G1MG Sections
            </summary>
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGSection.IG1MGSection.Type">
            <summary>
                Type of this section
            </summary>
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MGSection.IG1MGSection.Section">
            <summary>
                Section header
            </summary>
        </member>
        <member name="T:Cethleann.G1.G1ModelSection.G1MMatrix">
            <summary>
                Matrix Section of G1M models
            </summary>
        </member>
        <member name="M:Cethleann.G1.G1ModelSection.G1MMatrix.#ctor(System.Span{System.Byte},System.Boolean,Cethleann.Structure.Resource.ResourceSectionHeader)">
            <summary>
                Model Matrix Data
            </summary>
            <param name="data"></param>
            <param name="ignoreVersion"></param>
            <param name="sectionHeader"></param>
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MMatrix.Matrices">
            <summary>
                List of matrices found in the file.
                They're all weird.
            </summary>
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MMatrix.SupportedVersion">
            <inheritdoc />
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MMatrix.Section">
            <inheritdoc />
        </member>
        <member name="T:Cethleann.G1.G1ModelSection.G1MSkeleton">
            <summary>
                Skeleton Section of G1M models
            </summary>
        </member>
        <member name="M:Cethleann.G1.G1ModelSection.G1MSkeleton.#ctor(System.Span{System.Byte},System.Boolean,Cethleann.Structure.Resource.ResourceSectionHeader)">
            <summary>
                Model Skeleton Data.
            </summary>
            <param name="data"></param>
            <param name="ignoreVersion"></param>
            <param name="sectionHeader"></param>
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MSkeleton.Header">
            <summary>
                Format Header
            </summary>
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MSkeleton.BoneIndices">
            <summary>
                Bone Remap Index
            </summary>
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MSkeleton.Bones">
            <summary>
                lsof bones
            </summary>
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MSkeleton.WorldBones">
            <summary>
                lsof world bones
            </summary>
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MSkeleton.SupportedVersion">
            <inheritdoc />
        </member>
        <member name="P:Cethleann.G1.G1ModelSection.G1MSkeleton.Section">
            <inheritdoc />
        </member>
        <member name="T:Cethleann.G1.G1TextureGroup">
            <summary>
                G1TextureGroup is a bundle of textures.
                This is how all textures are encoded.
            </summary>
        </member>
        <member name="M:Cethleann.G1.G1TextureGroup.#ctor(System.Span{System.Byte},System.Boolean,System.Boolean)">
            <summary>
                Parse G1T from the provided data buffer
            </summary>
            <param name="data"></param>
            <param name="ignoreVersion"></param>
            <param name="metaOnly">only parse metadata</param>
        </member>
        <member name="P:Cethleann.G1.G1TextureGroup.Textures">
            <summary>
                List of textures found in this bundle
            </summary>
        </member>
        <member name="P:Cethleann.G1.G1TextureGroup.SupportedVersion">
            <inheritdoc />
        </member>
        <member name="P:Cethleann.G1.G1TextureGroup.Section">
            <inheritdoc />
        </member>
        <member name="M:Cethleann.G1.G1TextureGroup.UnpackWHM(Cethleann.Structure.Resource.Texture.TextureDataHeader,System.Func{System.Byte,Cethleann.Structure.Resource.Texture.TextureType})">
            <summary>
                Unpacks Width, Height, Mip Count, and DXGI Format from a G1T data header.
            </summary>
            <param name="header"></param>
            <param name="rewriteTextureType"></param>
            <returns></returns>
        </member>
        <member name="T:Cethleann.G1.IKTGLSection">
            <summary>
                Boiler interface for G1 Sections.
            </summary>
        </member>
        <member name="P:Cethleann.G1.IKTGLSection.SupportedVersion">
            <summary>
                Version implemented by this class
            </summary>
        </member>
        <member name="P:Cethleann.G1.IKTGLSection.Section">
            <summary>
                Section header for this section
            </summary>
        </member>
        <member name="T:Cethleann.G1.KLDM">
            <summary>
                Decomposes a MDLK buffer to individual files
            </summary>
        </member>
        <member name="M:Cethleann.G1.KLDM.#ctor(System.Span{System.Byte})">
            <summary>
                Decomposes a MDLK buffer to individual files
            </summary>
            <param name="buffer"></param>
            <exception cref="T:System.IO.InvalidDataException"></exception>
        </member>
        <member name="P:Cethleann.G1.KLDM.Entries">
            <summary>
                Usually models.
            </summary>
        </member>
        <member name="T:Cethleann.G1.PackedResource">
            <summary>
                Generic reader for KTGLSections
            </summary>
        </member>
        <member name="M:Cethleann.G1.PackedResource.#ctor">
            <summary>
                Initialize with no data
            </summary>
        </member>
        <member name="M:Cethleann.G1.PackedResource.#ctor(System.Span{System.Byte},System.Int32)">
            <summary>
                Initialize with a count
            </summary>
            <param name="data"></param>
            <param name="count"></param>
        </member>
        <member name="P:Cethleann.G1.PackedResource.Sections">
            <summary>
                lsof sections in the file.
            </summary>
        </member>
        <member name="T:Cethleann.GAPK">
            <summary>
                KTGL Animation Pack
            </summary>
        </member>
        <member name="M:Cethleann.GAPK.#ctor(System.Span{System.Byte})">
            <summary>
                Initialize with data
            </summary>
            <param name="data"></param>
        </member>
        <member name="P:Cethleann.GAPK.Header">
            <summary>
                GAPK Header
            </summary>
        </member>
        <member name="P:Cethleann.GAPK.Blobs">
            <summary>
                GAPK Data Blobs
            </summary>
        </member>
        <member name="P:Cethleann.GAPK.NameMap">
            <summary>
                Name Map for the files stored within
            </summary>
        </member>
        <member name="T:Cethleann.GMPK">
            <summary>
                KTGL Animation Pack
            </summary>
        </member>
        <member name="M:Cethleann.GMPK.#ctor(System.Span{System.Byte})">
            <summary>
                Initialize with data
            </summary>
            <param name="data"></param>
        </member>
        <member name="P:Cethleann.GMPK.Header">
            <summary>
                GMPK Header
            </summary>
        </member>
        <member name="P:Cethleann.GMPK.Index">
            <summary>
                GMPK Index
            </summary>
        </member>
        <member name="P:Cethleann.GMPK.Blobs">
            <summary>
                GMPK Data Blobs
            </summary>
        </member>
        <member name="P:Cethleann.GMPK.NameMap">
            <summary>
                Name Map for the files stored within
            </summary>
        </member>
        <member name="T:Cethleann.GPKNameMap">
            <summary>
                GAPK/GMPK NameMap/MotionMap parser
            </summary>
        </member>
        <member name="M:Cethleann.GPKNameMap.#ctor(System.Span{System.Byte})">
            <summary>
                Initialize with binary data
            </summary>
            <param name="data"></param>
        </member>
        <member name="P:Cethleann.GPKNameMap.Name">
            <summary>
                GPK Name
            </summary>
        </member>
        <member name="P:Cethleann.GPKNameMap.Header">
            <summary>
                NameMap Header
            </summary>
        </member>
        <member name="P:Cethleann.GPKNameMap.Entries">
            <summary>
                NameMap Entries
            </summary>
        </member>
        <member name="P:Cethleann.GPKNameMap.Names">
            <summary>
                Assembled Names
            </summary>
        </member>
        <member name="T:Cethleann.Gust.Compression">
            <summary>
                Compression helper class for Gust's fork of KTGL
            </summary>
        </member>
        <member name="M:Cethleann.Gust.Compression.Compress(System.Span{System.Byte},System.Int32)">
            <summary>
                Compresses a stream into a .gz stream.
            </summary>
            <param name="data"></param>
            <param name="blockSize"></param>
            <returns></returns>
        </member>
        <member name="M:Cethleann.Gust.Compression.Decompress(System.Span{System.Byte},System.Int32)">
            <summary>
                Decompresses a .gz stream.
            </summary>
            <param name="data"></param>
            <param name="blockSize"></param>
            <returns></returns>
        </member>
        <member name="T:Cethleann.Gust.PAK">
            <summary>
                Atelier PAK files
            </summary>
        </member>
        <member name="M:Cethleann.Gust.PAK.#ctor(System.String,System.Boolean)">
            <summary>
                Initialize with a path
            </summary>
            <param name="path"></param>
            <param name="a18">set to true if the PAKs are from Atelier Sophie or a newer Atelier</param>
        </member>
        <member name="M:Cethleann.Gust.PAK.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
                Initialize with a stream
            </summary>
            <param name="stream"></param>
            <param name="a18">set to true if the PAKs are from Atelier Sophie or a newer Atelier</param>
        </member>
        <member name="P:Cethleann.Gust.PAK.Header">
            <summary>
                Header of the PAK file
            </summary>
        </member>
        <member name="P:Cethleann.Gust.PAK.Entries">
            <summary>
                Entries found in the PAK
            </summary>
        </member>
        <member name="P:Cethleann.Gust.PAK.Is64Bit">
            <summary>
                Is the file 64-bit? Atelier games at and after Sophie are.
            </summary>
        </member>
        <member name="P:Cethleann.Gust.PAK.BaseStream">
            <summary>
                The underlying file stream
            </summary>
        </member>
        <member name="M:Cethleann.Gust.PAK.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Cethleann.Gust.PAK.Finalize">
            <summary>
                Disposes
            </summary>
        </member>
        <member name="M:Cethleann.Gust.PAK.TryGetEntry(System.String,Cethleann.Structure.PAKEntry@)">
            <summary>
                Gets an entry from it's filepath.
            </summary>
            <param name="path"></param>
            <param name="entry"></param>
            <returns></returns>
        </member>
        <member name="M:Cethleann.Gust.PAK.ReadEntry(Cethleann.Structure.PAKEntry)">
            <summary>
                Read entry via entry struct
            </summary>
            <param name="entry"></param>
            <returns></returns>
        </member>
        <member name="M:Cethleann.Gust.PAK.Recode(System.Span{System.Byte},System.Byte[])">
            <summary>
                Crypt rotate the data blob
            </summary>
            <param name="data"></param>
            <param name="key"></param>
        </member>
        <member name="T:Cethleann.Koei.Compression">
            <summary>
                Compression helper class for KTGL.
            </summary>
        </member>
        <member name="M:Cethleann.Koei.Compression.Compress(System.Span{System.Byte},System.Int32)">
            <summary>
                Compresses a stream into a .gz stream.
            </summary>
            <param name="data"></param>
            <param name="blockSize"></param>
            <returns></returns>
        </member>
        <member name="M:Cethleann.Koei.Compression.Decompress(System.Span{System.Byte},System.Int32)">
            <summary>
                Decompresses a .gz stream.
            </summary>
            <param name="data"></param>
            <param name="blockSize"></param>
            <returns></returns>
        </member>
        <member name="M:Cethleann.Koei.Compression.Decompress(System.IO.Stream,System.Int64)">
            <summary>
                Wrapper for Stream based buffers
            </summary>
            <param name="stream"></param>
            <param name="compressedSize"></param>
            <returns></returns>
        </member>
        <member name="T:Cethleann.Koei.DATA0">
            <summary>
                DATA0 is a list of information for which to read DATA1 with.
            </summary>
        </member>
        <member name="M:Cethleann.Koei.DATA0.#ctor(System.String)">
            <summary>
                Reads a DATA0 file list from a path
            </summary>
            <param name="path">File path to read</param>
        </member>
        <member name="M:Cethleann.Koei.DATA0.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
                Reads a DATA0 file list from a stream
            </summary>
            <param name="stream">Binary Read-capable Stream of DATA0</param>
            <param name="leaveOpen">If true, won't dispose <paramref name="stream" /></param>
        </member>
        <member name="P:Cethleann.Koei.DATA0.Entries">
            <summary>
                lsof <seealso cref="T:Cethleann.Structure.DATA0Entry" />
            </summary>
        </member>
        <member name="M:Cethleann.Koei.DATA0.ReadEntry(System.IO.Stream,System.Int32)">
            <summary>
                Reads a file index from DATA1
            </summary>
            <param name="data1">Binary Read-capable Stream of DATA1</param>
            <param name="index">Entry Index to read</param>
            <returns>memory stream of uncompressed bytes</returns>
        </member>
        <member name="M:Cethleann.Koei.DATA0.ReadEntry(System.IO.Stream,Cethleann.Structure.DATA0Entry)">
            <summary>
                Reads a file entry from DATA1
            </summary>
            <param name="data1">Binary Read-capable Stream of DATA1</param>
            <param name="entry">Entry to read</param>
            <returns>memory stream of uncompressed bytes</returns>
        </member>
        <member name="T:Cethleann.Koei.INFO0">
            <summary>
                INFO0 is a list of information for which to read the patch RomFS with.
            </summary>
        </member>
        <member name="M:Cethleann.Koei.INFO0.#ctor(Cethleann.Structure.INFO2,System.String)">
            <summary>
                Reads a INFO0 file list from a path
            </summary>
            <param name="info2"></param>
            <param name="path">File path to read</param>
        </member>
        <member name="M:Cethleann.Koei.INFO0.#ctor(Cethleann.Structure.INFO2,System.IO.Stream,System.Boolean)">
            <summary>
                Reads a INFO0 file list from a stream
            </summary>
            <param name="info2"></param>
            <param name="stream"></param>
            <param name="leaveOpen"></param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="P:Cethleann.Koei.INFO0.Entries">
            <summary>
                Entries found in the INFO0
            </summary>
        </member>
        <member name="M:Cethleann.Koei.INFO0.ReadEntry(System.String,System.Int32)">
            <summary>
                Attempts to read a Patch ROMFS entry
            </summary>
            <param name="romfs"></param>
            <param name="index"></param>
            <returns></returns>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
        </member>
        <member name="M:Cethleann.Koei.INFO0.GetPath(System.Int32)">
            <summary>
                Gets the path from Patch containers.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Cethleann.Koei.INFO0.ReadEntry(System.String,Cethleann.Structure.INFO0Entry)">
            <summary>
                Attempts to read a Patch ROMFS entry
            </summary>
            <param name="entryPath"></param>
            <param name="entry"></param>
            <returns></returns>
        </member>
        <member name="T:Cethleann.Koei.INFO1">
            <summary>
                INFO1 is a list of information of base files deleted with this patch.
                Usually this means that the files are contained in a DLC.
            </summary>
        </member>
        <member name="M:Cethleann.Koei.INFO1.#ctor(Cethleann.Structure.INFO2,System.IO.Stream,System.Boolean)">
            <summary>
                Reads a INFO1 file list from a stream
            </summary>
            <param name="info2"></param>
            <param name="stream"></param>
            <param name="leaveOpen"></param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Cethleann.Koei.INFO1.#ctor(Cethleann.Structure.INFO2,System.String)">
            <summary>
                Reads a INFO1 file list from a path
            </summary>
            <param name="info2"></param>
            <param name="path">File path to read</param>
        </member>
        <member name="P:Cethleann.Koei.INFO1.Entries">
            <summary>
                Entries found in the INFO1
            </summary>
        </member>
        <member name="M:Cethleann.Koei.INFO1.ReadEntry(System.String,System.Int32)">
            <summary>
                Attempts to read a Patch ROMFS entry
            </summary>
            <param name="romfs"></param>
            <param name="index"></param>
            <returns></returns>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
        </member>
        <member name="M:Cethleann.Koei.INFO1.GetPath(System.Int32)">
            <summary>
                Gets the path from Patch containers.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Cethleann.Koei.INFO1.ReadEntry(System.String,Cethleann.Structure.INFO1Entry)">
            <summary>
                Attempts to read a Patch ROMFS entry
            </summary>
            <param name="entryPath"></param>
            <param name="entry"></param>
            <returns></returns>
        </member>
        <member name="T:Cethleann.ManagedFS.Flayn">
            <summary>
                Management class for DATA0 and INFO0 files.
            </summary>
        </member>
        <member name="M:Cethleann.ManagedFS.Flayn.#ctor(System.String,Cethleann.GameId)">
            <summary>
                Loads data
            </summary>
            <param name="baseRomFs"></param>
            <param name="game"></param>
        </member>
        <member name="P:Cethleann.ManagedFS.Flayn.FileList">
            <summary>
                Loaded FileList.csv
            </summary>
        </member>
        <member name="P:Cethleann.ManagedFS.Flayn.GameId">
            <summary>
                Game ID of the game.
            </summary>
        </member>
        <member name="P:Cethleann.ManagedFS.Flayn.RootData">
            <summary>
                Game data
            </summary>
        </member>
        <member name="P:Cethleann.ManagedFS.Flayn.Data">
            <summary>
                DLC data
            </summary>
        </member>
        <member name="P:Cethleann.ManagedFS.Flayn.Patch">
            <summary>
                Patch data
            </summary>
        </member>
        <member name="P:Cethleann.ManagedFS.Flayn.PatchRomFS">
            <summary>
                Root directory of the Patch rom:/
            </summary>
        </member>
        <member name="P:Cethleann.ManagedFS.Flayn.RootEntryCount">
            <summary>
                Maximum number of entries found in the base container
            </summary>
        </member>
        <member name="P:Cethleann.ManagedFS.Flayn.DataEntryCount">
            <summary>
                Maximum number of entries found in the DLC containers
            </summary>
        </member>
        <member name="P:Cethleann.ManagedFS.Flayn.PatchEntryCount">
            <summary>
                Maximum number of entries found in the latest patch container.
            </summary>
        </member>
        <member name="P:Cethleann.ManagedFS.Flayn.EntryCount">
            <summary>
                Maximum number of entries found in both containers and patches
            </summary>
        </member>
        <member name="M:Cethleann.ManagedFS.Flayn.Dispose">
            <summary>
                Cleans managed data
            </summary>
        </member>
        <member name="M:Cethleann.ManagedFS.Flayn.Finalize">
            <summary>
                Cleanup
            </summary>
        </member>
        <member name="M:Cethleann.ManagedFS.Flayn.AddDataFS(System.String)">
            <summary>
                Adds a DATA0 container, usually DLC
            </summary>
            <param name="path"></param>
            <exception cref="T:System.IO.FileNotFoundException"></exception>
        </member>
        <member name="M:Cethleann.ManagedFS.Flayn.AddPatchFS(System.String)">
            <summary>
                Adds a patch container.
            </summary>
            <param name="path"></param>
            <exception cref="T:System.IO.DirectoryNotFoundException"></exception>
        </member>
        <member name="M:Cethleann.ManagedFS.Flayn.ReadEntry(System.Int32)">
            <summary>
                Reads an entry from the first valid (non-zero) storage.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Cethleann.ManagedFS.Flayn.Dispose(System.Boolean)">
            <summary>
                Disposes with Finalizer flag
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Cethleann.ManagedFS.Flayn.LoadFileList(System.String)">
            <summary>
                Loads a filelist from a csv file
            </summary>
        </member>
        <member name="M:Cethleann.ManagedFS.Flayn.GetFilename(System.Int32,System.String,Cethleann.DataType)">
            <summary>
                Attempts to get a valid filename/filepath.
            </summary>
            <param name="index"></param>
            <param name="ext"></param>
            <param name="dataType"></param>
            <returns></returns>
        </member>
        <member name="M:Cethleann.ManagedFS.Flayn.TestDLCSanity">
            <summary>
                Tests DLC sanity. DEBUG
            </summary>
        </member>
        <member name="T:Cethleann.ManagedFS.Reisalin">
            <summary>
                Manages PAK files
            </summary>
        </member>
        <member name="P:Cethleann.ManagedFS.Reisalin.PAKs">
            <summary>
                Lsof PAKs mounted
            </summary>
        </member>
        <member name="M:Cethleann.ManagedFS.Reisalin.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Cethleann.ManagedFS.Reisalin.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Cethleann.ManagedFS.Reisalin.Mount(System.String)">
            <summary>
                Mounts a PAK
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Cethleann.ManagedFS.Reisalin.ReadFile(System.String)">
            <summary>
                Reads a file from a path.
            </summary>
            <param name="path"></param>
            <returns></returns>
            <exception cref="T:System.IO.FileNotFoundException"></exception>
        </member>
        <member name="M:Cethleann.ManagedFS.Reisalin.Finalize">
            <summary>
                Disposes
            </summary>
        </member>
        <member name="T:Cethleann.ManagedFS.Yshtola">
            <summary>
                Manages TN files
            </summary>
        </member>
        <member name="M:Cethleann.ManagedFS.Yshtola.#ctor(System.String,Cethleann.ManagedFS.YshtolaSettings)">
            <summary>
                Initialize with standard data.
            </summary>
            <param name="root"></param>
            <param name="settings"></param>
        </member>
        <member name="P:Cethleann.ManagedFS.Yshtola.Settings">
            <summary>
                Settings to use for decryption and loading.
            </summary>
        </member>
        <member name="P:Cethleann.ManagedFS.Yshtola.Table">
            <summary>
                ID Table
            </summary>
        </member>
        <member name="P:Cethleann.ManagedFS.Yshtola.Root">
            <summary>
                Root directory, the one that contains COMMON.
            </summary>
        </member>
        <member name="M:Cethleann.ManagedFS.Yshtola.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Cethleann.ManagedFS.Yshtola.ReadEntry(Cethleann.Structure.IDTableEntry)">
            <summary>
                Reads a file from an ID Table entry.
            </summary>
            <param name="entry"></param>
            <returns></returns>
            <exception cref="T:System.IO.FileNotFoundException"></exception>
        </member>
        <member name="T:Cethleann.ManagedFS.YshtolaSettings">
            <summary>
                Abstract base settings
            </summary>
        </member>
        <member name="P:Cethleann.ManagedFS.YshtolaSettings.Directory">
            <summary>
                Directory the files and ID table reside in
            </summary>
        </member>
        <member name="P:Cethleann.ManagedFS.YshtolaSettings.TableName">
            <summary>
                ID Table name
            </summary>
        </member>
        <member name="P:Cethleann.ManagedFS.YshtolaSettings.XorTruth">
            <summary>
                Key truth
            </summary>
        </member>
        <member name="P:Cethleann.ManagedFS.YshtolaSettings.Multiplier">
            <summary>
                Key multiplier constant
            </summary>
        </member>
        <member name="P:Cethleann.ManagedFS.YshtolaSettings.Divisor">
            <summary>
                Key divisor constant
            </summary>
        </member>
        <member name="T:Cethleann.ManagedFS.DissidiaSettings">
            <summary>
                Settings specific to NT
            </summary>
        </member>
        <member name="M:Cethleann.ManagedFS.DissidiaSettings.#ctor">
            <summary>
                Initialize with default values
            </summary>
        </member>
        <member name="T:Cethleann.Ninja.Compression">
            <summary>
                Compression helper class for TN's fork of KTGL
            </summary>
        </member>
        <member name="M:Cethleann.Ninja.Compression.Decompress(System.Span{System.Byte},System.Int32)">
            <summary>
                Decompresses a .gz stream.
            </summary>
            <param name="data"></param>
            <param name="decompressedSize"></param>
            <returns></returns>
        </member>
        <member name="M:Cethleann.Ninja.Compression.Compress(System.Span{System.Byte},System.Int32)">
            <summary>
                Compresses a stream into a .gz stream.
            </summary>
            <param name="data"></param>
            <param name="blockSize"></param>
            <returns></returns>
        </member>
        <member name="T:Cethleann.Ninja.Encryption">
            <summary>
                Encryption helper for TN games.
            </summary>
        </member>
        <member name="M:Cethleann.Ninja.Encryption.Xor(System.UInt32,System.Span{System.Byte},System.UInt64,System.UInt64)">
            <summary>
                Mutate given key truth with parameters
            </summary>
            <param name="length"></param>
            <param name="truth"></param>
            <param name="multiplier"></param>
            <param name="divisor"></param>
            <returns></returns>
        </member>
        <member name="M:Cethleann.Ninja.Encryption.Crypt(System.Span{System.Byte},System.Span{System.Byte})">
            <summary>
                En/decrypt data
            </summary>
            <param name="data"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Cethleann.Ninja.IDTable">
            <summary>
                ID Table parser
            </summary>
        </member>
        <member name="M:Cethleann.Ninja.IDTable.#ctor(System.Span{System.Byte},Cethleann.Structure.IDTableFlags,System.Byte[],System.UInt64,System.UInt64)">
            <summary>
                Initialize table with decryption constants
            </summary>
            <param name="data"></param>
            <param name="flags"></param>
            <param name="truth"></param>
            <param name="multiplier"></param>
            <param name="divisor"></param>
        </member>
        <member name="P:Cethleann.Ninja.IDTable.Entries">
            <summary>
                File ID table entries
            </summary>
        </member>
        <member name="P:Cethleann.Ninja.IDTable.Header">
            <summary>
                Header of the file
            </summary>
        </member>
        <member name="P:Cethleann.Ninja.IDTable.Table">
            <summary>
                Raw table
            </summary>
        </member>
        <member name="M:Cethleann.Ninja.IDTable.Read(System.Span{System.Byte},Cethleann.Structure.IDTableEntry,System.Byte[],System.UInt64,System.UInt64)">
            <summary>
                Read a file with decryption constants using an id table entry
            </summary>
            <param name="file"></param>
            <param name="entry"></param>
            <param name="truth"></param>
            <param name="multiplier"></param>
            <param name="divisor"></param>
            <returns></returns>
        </member>
        <member name="M:Cethleann.Ninja.IDTable.Read(System.Span{System.Byte},System.UInt32,Cethleann.Structure.IDTableFlags,System.Byte[],System.UInt64,System.UInt64)">
            <summary>
                Read a file with decryption constants
            </summary>
            <param name="file"></param>
            <param name="size"></param>
            <param name="flags"></param>
            <param name="truth"></param>
            <param name="multiplier"></param>
            <param name="divisor"></param>
            <returns></returns>
        </member>
        <member name="T:Cethleann.SCEN">
            <summary>
                SCEN Container
            </summary>
        </member>
        <member name="M:Cethleann.SCEN.#ctor(System.Span{System.Byte})">
            <summary>
                Initialize with databuffer
            </summary>
            <param name="data"></param>
        </member>
        <member name="P:Cethleann.SCEN.Entries">
            <summary>
                lsof data entries
            </summary>
        </member>
        <member name="T:Cethleann.ScreenLayoutTexture">
            <summary>
                KSLT parser
            </summary>
        </member>
        <member name="M:Cethleann.ScreenLayoutTexture.#ctor(System.Span{System.Byte})">
            <summary>
                Initialize with byte data
            </summary>
            <param name="data"></param>
        </member>
        <member name="P:Cethleann.ScreenLayoutTexture.Header">
            <summary>
                KSLT Header data
            </summary>
        </member>
        <member name="P:Cethleann.ScreenLayoutTexture.Matrices">
            <summary>
                Matrix section
            </summary>
        </member>
        <member name="P:Cethleann.ScreenLayoutTexture.Pointers">
            <summary>
                Image pointers
            </summary>
        </member>
        <member name="P:Cethleann.ScreenLayoutTexture.Names">
            <summary>
                Image names
            </summary>
        </member>
        <member name="P:Cethleann.ScreenLayoutTexture.Entries">
            <summary>
                Images
            </summary>
        </member>
        <member name="T:Cethleann.Structure.CompressionInfo">
            <summary>
                Info regarding compression for a file in DATA1
            </summary>
        </member>
        <member name="P:Cethleann.Structure.CompressionInfo.ChunkSize">
            <summary>
                usually 0x0001_0000, sometimes 0xFFFF_FFFF for dynamically sized.
            </summary>
        </member>
        <member name="P:Cethleann.Structure.CompressionInfo.ChunkCount">
            <summary>
                Number of chunks
            </summary>
        </member>
        <member name="P:Cethleann.Structure.CompressionInfo.Size">
            <summary>
                Compressed (read: bytes to read in this file) size of this file.
            </summary>
        </member>
        <member name="T:Cethleann.Structure.DATA0Entry">
            <summary>
                An entry in DATA0
            </summary>
        </member>
        <member name="P:Cethleann.Structure.DATA0Entry.Offset">
            <summary>
                Offset in DATA1
            </summary>
        </member>
        <member name="P:Cethleann.Structure.DATA0Entry.UncompressedSize">
            <summary>
                Uncompressed (read: bytes to expect from decompression) size of this file.
            </summary>
        </member>
        <member name="P:Cethleann.Structure.DATA0Entry.CompressedSize">
            <summary>
                Compressed (read: bytes to read in this file) size of this file.
            </summary>
        </member>
        <member name="P:Cethleann.Structure.DATA0Entry.IsCompressed">
            <summary>
                True if the file is compressed with ZLIB
            </summary>
        </member>
        <member name="T:Cethleann.Structure.INFO1Entry">
            <summary>
                All assumed
            </summary>
        </member>
        <member name="P:Cethleann.Structure.Resource.Texture.TextureDataHeader.MipCount">
            <summary>
                SHR 4
            </summary>
        </member>
        <member name="P:Cethleann.Structure.Resource.Texture.TextureDataHeader.PackedDimensions">
            <summary>
                2 POW value AND 0xF = width
                2 POW value SHR 0x4 = height
            </summary>
        </member>
        <member name="T:Cethleann.TextLocalization">
            <summary>
                Text Localization files are used to collect text data.
            </summary>
        </member>
        <member name="M:Cethleann.TextLocalization.#ctor(System.Span{System.Byte})">
            <summary>
                Initialize with a span buffer
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="P:Cethleann.TextLocalization.Entries">
            <summary>
                List of string entries in this text blob
            </summary>
        </member>
        <member name="T:Cethleann.UTF8TBL">
            <summary>
                UTF-8 texture sheet character table
            </summary>
        </member>
        <member name="M:Cethleann.UTF8TBL.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:Cethleann.UTF8TBL.#ctor(System.Span{System.Byte})">
            <summary>
                Initialize with databuffer
            </summary>
            <param name="data"></param>
        </member>
        <member name="P:Cethleann.UTF8TBL.Characters">
            <summary>
                Chars found in the table.
            </summary>
        </member>
        <member name="M:Cethleann.UTF8TBL.Write">
            <summary>
                Write table to buffer
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
