<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cethleann</name>
    </assembly>
    <members>
        <member name="T:Cethleann.DATA0">
            <summary>
            DATA0 is a list of information for which to read DATA1 with.
            </summary>
        </member>
        <member name="P:Cethleann.DATA0.Entries">
            <summary>
            lsof <seealso cref="T:Cethleann.Structure.DATA0Entry"/>
            </summary>
        </member>
        <member name="M:Cethleann.DATA0.#ctor(System.String)">
            <summary>
            Reads a DATA0 file list from a path
            </summary>
            <param name="path">File path to read</param>
        </member>
        <member name="M:Cethleann.DATA0.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Reads a DATA0 file list from a stream
            </summary>
            <param name="stream">Binary Read-capable Stream of DATA0</param>
            <param name="leaveOpen">If true, won't dispose <paramref name="stream"/></param>
        </member>
        <member name="M:Cethleann.DATA0.ReadEntry(System.IO.Stream,System.Int32)">
            <summary>
            Reads a file index from DATA1
            </summary>
            <param name="DATA1">Binary Read-capable Stream of DATA1</param>
            <param name="index">Entry Index to read</param>
            <returns>memory stream of uncompressed bytes</returns>
        </member>
        <member name="M:Cethleann.DATA0.GuessType(System.IO.Stream)">
            <summary>
            Guesses the format based on the magic value.
            </summary>
            <param name="data">data to test</param>
            <returns>data type, null if magic isn't known</returns>
        </member>
        <member name="M:Cethleann.DATA0.GuessType(System.Span{System.Byte})">
            <summary>
            Guesses the format based on the magic value.
            </summary>
            <param name="buffer">data to test</param>
            <returns>data type, null if magic isn't known</returns>
        </member>
        <member name="M:Cethleann.DATA0.GuessDataTable(System.IO.Stream)">
            <summary>
            Guesses if the stream is a DataTable
            </summary>
            <param name="data">data to test</param>
            <returns>true if the header is predictable</returns>
        </member>
        <member name="M:Cethleann.DATA0.GuessDataTable(System.Span{System.Byte})">
            <summary>
            Guesses if the stream is a DataTable
            </summary>
            <param name="buffer">data to test</param>
            <returns>true if the header is predictable</returns>
        </member>
        <member name="M:Cethleann.DATA0.ReadEntry(System.IO.Stream,Cethleann.Structure.DATA0Entry)">
            <summary>
            Reads a file entry from DATA1
            </summary>
            <param name="DATA1">Binary Read-capable Stream of DATA1</param>
            <param name="entry">Entry to read</param>
            <returns>memory stream of uncompressed bytes</returns>
        </member>
        <member name="T:Cethleann.DataTables.DataTable">
            <summary>
            Main blob bundle of the game.
            Can contain many things, from structures to art assets.
            </summary>
        </member>
        <member name="F:Cethleann.DataTables.DataTable.Entries">
            <summary>
            Lsof Entries found in the table
            </summary>
        </member>
        <member name="M:Cethleann.DataTables.DataTable.#ctor(System.IO.Stream)">
            <summary>
            Initialize with a binary stream.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:Cethleann.DataTables.DataTable.#ctor(System.Span{System.Byte})">
            <summary>
            Initialize with a span.
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="T:Cethleann.DataTables.StructTable">
            <summary>
            Parses a memory buffer by assuming it consists of fixed width structs.
            </summary>
        </member>
        <member name="P:Cethleann.DataTables.StructTable.Entries">
            <summary>
            Lsof Entries found in the struct table
            </summary>
        </member>
        <member name="M:Cethleann.DataTables.StructTable.#ctor(System.Span{System.Byte})">
            <summary>
            Initialize with given buffer
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="M:Cethleann.DataTables.StructTable.Cast``1">
            <summary>
            Cast all entries to the specified struct type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cethleann.DataType">
            <summary>
            LSOF 
            </summary>
        </member>
        <member name="F:Cethleann.DataType.StructTable">
            <summary>
            <seealso cref="F:Cethleann.DataType.StructTable"/>
            </summary>
        </member>
        <member name="F:Cethleann.DataType.SARC">
            <summary>
            S-Archive?
            </summary>
        </member>
        <member name="F:Cethleann.DataType.SPKG">
            <summary>
            S-Package?
            </summary>
        </member>
        <member name="F:Cethleann.DataType.GT">
            <summary>
            Koei Texture
            </summary>
        </member>
        <member name="F:Cethleann.DataType.KTSR">
            <summary>
            Koei Tecmo Sound Resource
            </summary>
        </member>
        <member name="F:Cethleann.DataType.SCEN">
            <summary>
            Scene
            </summary>
        </member>
        <member name="F:Cethleann.DataType.WEBM">
            <summary>
            WebM Video Container
            </summary>
        </member>
        <member name="T:Cethleann.Structure.DATA0Entry">
            <summary>
            An entry in DATA0
            </summary>
        </member>
        <member name="P:Cethleann.Structure.DATA0Entry.Offset">
            <summary>
            Offset in DATA1
            </summary>
        </member>
        <member name="P:Cethleann.Structure.DATA0Entry.UncompressedSize">
            <summary>
            Uncompressed (read: bytes to expect from decompression) size of this file.
            </summary>
        </member>
        <member name="P:Cethleann.Structure.DATA0Entry.CompressedSize">
            <summary>
            Compressed (read: bytes to read in this file) size of this file.
            </summary>
        </member>
        <member name="P:Cethleann.Structure.DATA0Entry.IsCompressed">
            <summary>
            True if the file is compressed with ZLIB
            </summary>
        </member>
        <member name="T:Cethleann.Structure.DATA1CompressionInfo">
            <summary>
            Info regarding compression for a file in DATA1
            </summary>
        </member>
        <member name="P:Cethleann.Structure.DATA1CompressionInfo.Unknown">
            <summary>
            Always 0x10000, I assumed ChunkSize but it doesn't match up.
            </summary>
        </member>
        <member name="P:Cethleann.Structure.DATA1CompressionInfo.ChunkCount">
            <summary>
            Number of chunks
            </summary>
        </member>
        <member name="P:Cethleann.Structure.DATA1CompressionInfo.Size">
            <summary>
            Compressed (read: bytes to read in this file) size of this file.
            Don't know why this exist, maybe anonymous file pointers?
            </summary>
        </member>
    </members>
</doc>
